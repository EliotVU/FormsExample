;Config
;======

[Forms FScene]
;A reference to a SoundCue to be played on Click. Replace with your own sound and remove the semicolon.
ClickSoundName=SoundCue'GameUI.Sounds.Click_Cue'
;A reference to a SoundCue to be played on hover. Replace with your own sound and remove the semicolon.
HoverSoundName=SoundCue'GameUI.Sounds.Hover_Cue'
;A reference to a Texture2D that contains the touch cursor and the point(hover) cursor as one image; input the texture coordinates below!
CursorsImageName=Texture2D'FormsUI.Theme.Elements'
;Cursor coordinates in pixels. U = X, V = Y, UL = Width, and VL = Height.
CursorPointCoords=(U=960.0,V=32.0,UL=32.0,VL=46.0)
CursorTouchCoords=(U=960.0,V=96.0,UL=32.0,VL=46.0)
CursorScaling=0.5
;Theme's name binded using [(ThemeName)StyleIdenfitier StyleClass]
;Allowed characters(regexp): [a-zA-Z_ -]
ThemeName=Standard

;Classes
; Note: Only the FPage, FButton, and FCheckBox have their own specific texture, 
; - all the other components reuse one of the 3. So expect bad looking components :P
;=======

;Every class below will inherit this object's configuration.
[(Standard)Global FStyle]
ImageName=Texture2D'FormsUI.Theme.Elements'
ImageColor=(R=255,G=255,B=255,A=255)
ImageMethod=IM_Scale
; Only applied if @ImageMethod is set to IM_Scale.
ImageScaling=1.0
; Only applied if @ImageMethod is set to IM_Stretch. 
; See Engine.EngineTypes.EBlendMode for options.
ImageBlendMode=BLEND_Opaque
; Fade any color between states hover, active, and focus. Including @ImageColor.
bTransitionColor=true

; TextColor will fade to one of these depending on the active state.
; Allows for an easy global hover style setup.

;When colliding
HoverColor=(R=250,G=250,B=0,A=255)

;When pressing
ActiveColor=(R=47,G=47,B=47,A=255)

;When focussed
FocusColor=(R=255,G=255,B=255,A=255)

;When component bEnabled is false
DisabledColor=(R=0,G=0,B=0,A=255)

;No style except for components whom have their own class! For example we don't want Containers to have a background!
[(Standard)Hidden FStyle]
ImageName=none

;The style for all components whom want a background but have no specific associated class(Unlike FButton and FCheckBox)
[(Standard)Default FStyle]
ImageNameCoords=(U=16.000000,V=16.000000,UL=112.000000,VL=48.000000)

[(Standard)Page FStyle]
ImageNameCoords=(U=16.000000,V=128.000000,UL=112.000000,VL=96.000000)

[(Standard)Slider FScrollStyle]
ImageNameCoords=(U=16.000000,V=240.000000,UL=112.000000,VL=96.000000)
;-----
TrackImageColor=(R=200,G=200,B=200,A=255)
TrackImageName=Texture2D'FormsUI.Theme.Elements'
TrackImageNameCoords=(U=144.000000,V=16.000000,UL=16.000000,VL=176.000000)

[(Standard)GroupBox FStyle]
; Set A to 255 if you want the squared border to be rendered!
ImageColor=(R=120,G=120,B=120,A=0)

;Default style for all FLabel components.
[(Standard)Label FLabelStyle]
TextFontName=Font'FormsUI.Fonts.SwisBold_10pt'
TextColor=(R=200,G=200,B=200,A=255)
TextRenderInfo=(bClipText=true)
TextFontScaling=(X=1.0,Y=1.0)

[(Standard)Label-Column FLabelStyle]
ImageNameCoords=(U=16.000000,V=240.000000,UL=112.000000,VL=96.000000)
;-----
HoverColor=(R=200,A=120)
ActiveColor=(R=0,G=200,B=0,A=128)
DisabledColor=(R=200,G=0,B=0,A=255)

;--FCheckBox--
;Inherits style of Label
[(Standard)Label-CheckBox FLabelStyle]
ImageNameCoords=(U=16.000000,V=80.000000,UL=112.000000,VL=32.000000)

;Inherits style of Label-CheckBox
[(Standard)Label-CheckBox:hover FLabelStyle]
ImageColor=(R=200,G=200,B=200,A=255)

;Inherits style of Label-CheckBox:hover (Note: :focus inherits Label-CheckBox)
[(Standard)Label-CheckBox:active FLabelStyle]
ImageColor=(R=100,G=100,B=100,A=255)
;--FCheckBox--

;--FButton--
;Default style for all FButton components.
[(Standard)Label-Button FLabelStyle]
ImageNameCoords=(U=16.000000,V=16.000000,UL=112.000000,VL=48.000000)
TextFontName=Font'FormsUI.Fonts.SwisBold_12pt'

[(Standard)Label-Button:hover FLabelStyle]
ImageColor=(R=200,G=200,B=200,A=255)

[(Standard)Label-Button:active FLabelStyle]
ImageColor=(R=100,G=100,B=100,A=255)
;--FButton--

;--FTabButton--
;Default style for all FTabButtons. Inherits Button style
[(Standard)Label-Button-TabButton FLabelStyle]
TextColor=(R=255,G=255,B=255,A=255)
SelectedColor=(R=20,G=90,B=140,A=255)
ImageName=none
Elements=(Name=ButtonGradient,Class=FElementGradient)
Elements=(Name=ButtonBorder,Class=FElementBorder)

[(Standard)Label-Button-TabButton:hover FLabelStyle]
ImageColor=(R=240,G=240,B=240,A=255)
Elements=(Name=ButtonGradientHover,Class=FElementGradient)
Elements=(Name=ButtonBorderHover,Class=FElementBorder)

[(Standard)Label-Button-TabButton:active FLabelStyle]
ImageColor=(R=190,G=190,B=190,A=255)

[(Standard)Label-Button-TabButton:focus FLabelStyle]
ImageColor=(R=170,G=170,B=170,A=255)
;--FTabButton--

;--StepBox buttons--
[(Standard)Label-Button-Previous FLabelStyle]
ImageNameCoords=(U=16.000000,V=352.000000,UL=48.000000,VL=45.000000)

[(Standard)Label-Button-Previous:hover FLabelStyle]
ImageColor=(R=250,G=250,B=0,A=255)

[(Standard)Label-Button-Next FLabelStyle]
ImageNameCoords=(U=80.000000,V=352.000000,UL=48.000000,VL=45.000000)

[(Standard)Label-Button-Next:hover FLabelStyle]
ImageColor=(R=250,G=250,B=0,A=255)
;--StepBox buttons--

[(Standard)ScrollBar FStyle]
ImageNameCoords=(U=144.000000,V=16.000000,UL=16.000000,VL=176.000000)
ImageColor=(R=255,G=255,B=255,A=40)

[(Standard)ScrollBar:hover FStyle]
ImageColor=(R=255,G=255,B=255,A=200)

[(Standard)Label-TextBox FLabelStyle]
ImageNameCoords=(U=16.000000,V=240.000000,UL=112.000000,VL=96.000000)

[(Standard)Label-TextBox:hover FLabelStyle]
TextColor=(R=255,G=255,B=255,A=255)
Elements=(Name=HoverBorder,Class=FElementBorder)

[(Standard)Label-TextBox:focus FLabelStyle]
Elements=(Name=FocusBorder,Class=FElementBorder)

[(Standard)Label-WindowHeader FLabelStyle]
TextFontName=Font'FormsUI.Fonts.SwisBold_16pt'
TextColor=(R=250,G=250,B=255,A=255)

[(Standard)ToolTipBackground FStyle]
;ImageNameCoords=(U=16.000000,V=240.000000,UL=112.000000,VL=96.000000)
ImageName=none
Elements=(Name=ToolTipGradient,Class=FElementGradient)
Elements=(Name=ToolTipBorder,Class=FElementBorder)

;Custom classes
;==============

; You may delete those. These are only examples.

; Class chain: FComponent->FLabel->FButton->FTabButton
;	begin object name=oPlayButton class=FTabButton
;		...
;		StyleNames.Add(NavButton) // Add NavButton as class. You may add more classes to distinguish styles per button, see below QuitButton.
;	end object
[(Standard)Label-Button-TabButton-NavButton FLabelStyle]
ImageColor=(R=255,G=255,B=0,A=255)

;State classes have to be rewritten because they are not inherited!
[(Standard)Label-Button-TabButton-NavButton:hover FLabelStyle]
ImageColor=(R=240,G=240,B=240,A=255)

[(Standard)Label-Button-TabButton-NavButton:active FLabelStyle]
ImageColor=(R=190,G=190,B=190,A=255)

[(Standard)Label-Button-TabButton-NavButton:focus FLabelStyle]
ImageColor=(R=170,G=170,B=170,A=255)

;	begin object name=oQuit class=FButton
;		...
;		StyleNames.Add(QuitButton)
;	end object
[(Standard)Label-Button-QuitButton FLabelStyle]
ImageColor=(R=100,G=0,B=0,A=255)

[(Standard)Label-Button-QuitButton:hover FLabelStyle]
ImageColor=(R=120,G=0,B=0,A=255)

[(Standard)Label-Button-QuitButton:active FLabelStyle]
ImageColor=(R=160,G=0,B=0,A=255)
